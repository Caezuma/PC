{
  "openapi": "3.0.0",
  "info": {
    "title": "Bookings Management API",
    "version": "1.0.0",
    "description": "API for managing hotel bookings."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local Server"
    }
  ],
  "paths": {
    "/bookings": {
      "get": {
        "summary": "Get a list of all bookings",
        "tags": ["Bookings"],
        "responses": {
          "200": {
            "description": "List of bookings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new booking",
        "tags": ["Bookings"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Booking"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Booking created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }
    },
    "/bookings/{id}": {
      "put": {
        "summary": "Update a booking by ID",
        "tags": ["Bookings"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Booking ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Booking"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Booking updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a booking by ID",
        "tags": ["Bookings"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Booking ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Booking deleted successfully"
          },
          "404": {
            "description": "Booking not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Booking": {
        "type": "object",
        "required": ["roomId", "customerName", "startDate", "endDate"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the booking"
          },
          "roomId": {
            "type": "integer",
            "description": "ID of the room being booked"
          },
          "customerName": {
            "type": "string",
            "description": "Name of the customer making the booking"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Start date of the booking"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "End date of the booking"
          },
          "totalPrice": {
            "type": "number",
            "description": "Total price for the booking"
          }
        }
      }
    }
  }
}